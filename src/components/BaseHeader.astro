---
const { title } = Astro.props;

const siteTitle = import.meta.env.VITE_SITE_TITLE;
const plausibleEnable = import.meta.env.VITE_PLAUSIBLE_ENABLE;
---

<script>
  document.addEventListener("astro:page-load", () => {
    class AstroPlausible extends HTMLElement {
      connectedCallback() {
        const enable = this.dataset.plausibleEnable === "true";
        if (enable) {
          const plausibleAttributes = {
            src: "https://analytics.doesmycode.work/js/script.js",
            "data-domain": "doesmycode.work",
          };

          const plausibleScript = document.createElement("script");

          Object.entries(plausibleAttributes).forEach(([key, value]) =>
            plausibleScript.setAttribute(key, value),
          );

          document.head.appendChild(plausibleScript);
        }
      }
    }

    customElements.define("astro-plausible", AstroPlausible);
  });
</script>

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />

<meta name="description" content="My code doesn't work" />

<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />

<link
  rel="alternate"
  type="application/rss+xml"
  title="Doesmycode.work"
  href={new URL("rss.xml", Astro.site)}
/>

<astro-plausible data-plausible-enable={plausibleEnable}></astro-plausible>

<title>{title} | {siteTitle}</title>
