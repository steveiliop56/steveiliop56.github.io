---
import { Icon } from "astro-icon/components";

const { repo, description, name } = Astro.props;
---

<script>
  document.addEventListener("astro:page-load", () => {
    class AstroProject extends HTMLElement {
      connectedCallback() {
        const repo = this.dataset.repo;
        const formatter = new Intl.NumberFormat("en", {
          notation: "compact",
          compactDisplay: "short",
        });

        async function getStars() {
          const res = await fetch(`https://api.github.com/repos/${repo}`);
          const data = await res.json();
          return data.stargazers_count;
        }

        async function updateStars() {
          const stars = await getStars();
          const starsElement = document.getElementById(`${repo}-stars`);
          if (starsElement) {
            starsElement.innerText = formatter
              .format(stars)
              .toLocaleLowerCase();
          }
        }

        updateStars();
      }
    }

    customElements.define("astro-project", AstroProject);
  });
</script>

<astro-project data-repo={repo}>
  <div
    class="flex flex-col bg-neutral-50 dark:bg-neutral-950 border-[0.5px] border-neutral-200 dark:border-neutral-800 hover:text-neutral-700 dark:hover:text-neutral-200 transition-colors rounded-md p-4 max-w-md gap-2 h-full drop-shadow-sm"
  >
    <div class="flex flex-row justify-between">
      <div class="flex flex-row gap-2 items-center">
        <Icon name="tabler:brand-github" class="size-6" />
        <a
          href={`https://github.com/${repo}`}
          title={name}
          class="text-blue-700 dark:text-blue-500 hover:text-blue-600 dark:hover:text-blue-400 transition-colors underline text-base font-medium"
        >
          {name}
        </a>
      </div>
      <div class="flex flex-row gap-1 items-center">
        <Icon name="tabler:star-filled" class="w-4 h-4 text-yellow-500" />
        <p class="font-medium" id={`${repo}-stars`}></p>
      </div>
    </div>
    <p>
      {description}
    </p>
  </div>
</astro-project>
